package com.heanbian.block.zabbix;

import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

public final class ZabbixInterfaceTypeUtils {

	private static final Map<String, String> _mib;

	static {
		Map<String, String> mib = new HashMap<>();
		mib.put("0", "virtual");
		mib.put("1", "other");
		mib.put("2", "regular1822");
		mib.put("3", "hdh1822");
		mib.put("4", "ddnX25");
		mib.put("5", "rfc877x25");
		mib.put("6", "ethernetCsmacd");
		mib.put("7", "iso88023Csmacd");
		mib.put("8", "iso88024TokenBus");
		mib.put("9", "iso88025TokenRing");
		mib.put("10", "iso88026Man");
		mib.put("11", "starLan");
		mib.put("12", "proteon10Mbit");
		mib.put("13", "proteon80Mbit");
		mib.put("14", "hyperchannel");
		mib.put("15", "fddi");
		mib.put("16", "lapb");
		mib.put("17", "sdlc");
		mib.put("18", "ds1");
		mib.put("19", "e1");
		mib.put("20", "basicISDN");
		mib.put("21", "primaryISDN");
		mib.put("22", "propPointToPointSerial");
		mib.put("23", "ppp");
		mib.put("24", "softwareLoopback");
		mib.put("25", "eon");
		mib.put("26", "ethernet3Mbit");
		mib.put("27", "nsip");
		mib.put("28", "slip");
		mib.put("29", "ultra");
		mib.put("30", "ds3");
		mib.put("31", "sip");
		mib.put("32", "frameRelay");
		mib.put("33", "rs232");
		mib.put("34", "para");
		mib.put("35", "arcnet");
		mib.put("36", "arcnetPlus");
		mib.put("37", "atm");
		mib.put("38", "miox25");
		mib.put("39", "sonet");
		mib.put("40", "x25ple");
		mib.put("41", "iso88022llc");
		mib.put("42", "localTalk");
		mib.put("43", "smdsDxi");
		mib.put("44", "frameRelayService");
		mib.put("45", "v35");
		mib.put("46", "hssi");
		mib.put("47", "hippi");
		mib.put("48", "modem");
		mib.put("49", "aal5");
		mib.put("50", "sonetPath");
		mib.put("51", "sonetVT");
		mib.put("52", "smdsIcip");
		mib.put("53", "propVirtual");
		mib.put("54", "propMultiplexor");
		mib.put("55", "ieee80212");
		mib.put("56", "fibreChannel");
		mib.put("57", "hippiInterface");
		mib.put("58", "frameRelayInterconnect");
		mib.put("59", "aflane8023");
		mib.put("60", "aflane8025");
		mib.put("61", "cctEmul");
		mib.put("62", "fastEther");
		mib.put("63", "isdn");
		mib.put("64", "v11");
		mib.put("65", "v36");
		mib.put("66", "g703at64k");
		mib.put("67", "g703at2mb");
		mib.put("68", "qllc");
		mib.put("69", "fastEtherFX");
		mib.put("70", "channel");
		mib.put("71", "ieee80211");
		mib.put("72", "ibm370parChan");
		mib.put("73", "escon");
		mib.put("74", "dlsw");
		mib.put("75", "isdns");
		mib.put("76", "isdnu");
		mib.put("77", "lapd");
		mib.put("78", "ipSwitch");
		mib.put("79", "rsrb");
		mib.put("80", "atmLogical");
		mib.put("81", "ds0");
		mib.put("82", "ds0Bundle");
		mib.put("83", "bsc");
		mib.put("84", "async");
		mib.put("85", "cnr");
		mib.put("86", "iso88025Dtr");
		mib.put("87", "eplrs");
		mib.put("88", "arap");
		mib.put("89", "propCnls");
		mib.put("90", "hostPad");
		mib.put("91", "termPad");
		mib.put("92", "frameRelayMPI");
		mib.put("93", "x213");
		mib.put("94", "adsl");
		mib.put("95", "radsl");
		mib.put("96", "sdsl");
		mib.put("97", "vdsl");
		mib.put("98", "iso88025CRFPInt");
		mib.put("99", "myrinet");
		mib.put("100", "voiceEM");
		mib.put("101", "voiceFXO");
		mib.put("102", "voiceFXS");
		mib.put("103", "voiceEncap");
		mib.put("104", "voiceOverIp");
		mib.put("105", "atmDxi");
		mib.put("106", "atmFuni");
		mib.put("107", "atmIma");
		mib.put("108", "pppMultilinkBundle");
		mib.put("109", "ipOverCdlc");
		mib.put("110", "ipOverClaw");
		mib.put("111", "stackToStack");
		mib.put("112", "virtualIpAddress");
		mib.put("113", "mpc");
		mib.put("114", "ipOverAtm");
		mib.put("115", "iso88025Fiber");
		mib.put("116", "tdlc");
		mib.put("117", "gigabitEthernet");
		mib.put("118", "hdlc");
		mib.put("119", "lapf");
		mib.put("120", "v37");
		mib.put("121", "x25mlp");
		mib.put("122", "x25huntGroup");
		mib.put("123", "transpHdlc");
		mib.put("124", "interleave");
		mib.put("125", "fast");
		mib.put("126", "ip");
		mib.put("127", "docsCableMaclayer");
		mib.put("128", "docsCableDownstream");
		mib.put("129", "docsCableUpstream");
		mib.put("130", "a12MppSwitch");
		mib.put("131", "tunnel");
		mib.put("132", "coffee");
		mib.put("133", "ces");
		mib.put("134", "atmSubInterface");
		mib.put("135", "l2vlan");
		mib.put("136", "l3ipvlan");
		mib.put("137", "l3ipxvlan");
		mib.put("138", "digitalPowerline");
		mib.put("139", "mediaMailOverIp");
		mib.put("140", "dtm");
		mib.put("141", "dcn");
		mib.put("142", "ipForward");
		mib.put("143", "msdsl");
		mib.put("144", "ieee1394");
		mib.put("145", "if-gsn");
		mib.put("146", "dvbRccMacLayer");
		mib.put("147", "dvbRccDownstream");
		mib.put("148", "dvbRccUpstream");
		mib.put("149", "atmVirtual");
		mib.put("150", "mplsTunnel");
		mib.put("151", "srp");
		mib.put("152", "voiceOverAtm");
		mib.put("153", "voiceOverFrameRelay");
		mib.put("154", "idsl");
		mib.put("155", "compositeLink");
		mib.put("156", "ss7SigLink");
		mib.put("157", "propWirelessP2P");
		mib.put("158", "frForward");
		mib.put("159", "rfc1483");
		mib.put("160", "usb");
		mib.put("161", "ieee8023adLag");
		mib.put("162", "bgppolicyaccounting");
		mib.put("163", "frf16MfrBundle");
		mib.put("164", "h323Gatekeeper");
		mib.put("165", "h323Proxy");
		mib.put("166", "mpls");
		mib.put("167", "mfSigLink");
		mib.put("168", "hdsl2");
		mib.put("169", "shdsl");
		mib.put("170", "ds1FDL");
		mib.put("171", "pos");
		mib.put("172", "dvbAsiIn");
		mib.put("173", "dvbAsiOut");
		mib.put("174", "plc");
		mib.put("175", "nfas");
		mib.put("176", "tr008");
		mib.put("177", "gr303RDT");
		mib.put("178", "gr303IDT");
		mib.put("179", "isup");
		mib.put("180", "propDocsWirelessMaclayer");
		mib.put("181", "propDocsWirelessDownstream");
		mib.put("182", "propDocsWirelessUpstream");
		mib.put("183", "hiperlan2");
		mib.put("184", "propBWAp2Mp");
		mib.put("185", "sonetOverheadChannel");
		mib.put("186", "digitalWrapperOverheadChannel");
		mib.put("187", "aal2");
		mib.put("188", "radioMAC");
		mib.put("189", "atmRadio");
		mib.put("190", "imt");
		mib.put("191", "mvl");
		mib.put("192", "reachDSL");
		mib.put("193", "frDlciEndPt");
		mib.put("194", "atmVciEndPt");
		mib.put("195", "opticalChannel");
		mib.put("196", "opticalTransport");
		mib.put("197", "propAtm");
		mib.put("198", "voiceOverCable");
		mib.put("199", "infiniband");
		mib.put("200", "teLink");
		mib.put("201", "q2931");
		mib.put("202", "virtualTg");
		mib.put("203", "sipTg");
		mib.put("204", "sipSig");
		mib.put("205", "docsCableUpstreamChannel");
		mib.put("206", "econet");
		mib.put("207", "pon155");
		mib.put("208", "pon622");
		mib.put("209", "bridge");
		mib.put("210", "linegroup");
		mib.put("211", "voiceEMFGD");
		mib.put("212", "voiceFGDEANA");
		mib.put("213", "voiceDID");
		mib.put("214", "mpegTransport");
		mib.put("215", "sixToFour");
		mib.put("216", "gtp");
		mib.put("217", "pdnEtherLoop1");
		mib.put("218", "pdnEtherLoop2");
		mib.put("219", "opticalChannelGroup");
		mib.put("220", "homepna");
		mib.put("221", "gfp");
		mib.put("222", "ciscoISLvlan");
		mib.put("223", "actelisMetaLOOP");
		mib.put("224", "fcipLink");
		mib.put("225", "rpr");
		mib.put("226", "qam");
		mib.put("227", "lmp");
		mib.put("228", "cblVectaStar");
		mib.put("229", "docsCableMCmtsDownstream");
		mib.put("230", "adsl2");
		mib.put("231", "macSecControlledIF");
		mib.put("232", "macSecUncontrolledIF");
		mib.put("233", "aviciOpticalEther");
		mib.put("234", "atmbond");
		mib.put("235", "voiceFGDOS");
		mib.put("236", "mocaVersion1");
		mib.put("237", "ieee80216WMAN");
		mib.put("238", "adsl2plus");
		mib.put("239", "dvbRcsMacLayer");
		mib.put("240", "dvbTdm");
		mib.put("241", "dvbRcsTdma");
		mib.put("242", "x86Laps");
		mib.put("243", "wwanPP");
		mib.put("244", "wwanPP2");
		mib.put("245", "voiceEBS");
		mib.put("246", "ifPwType");
		mib.put("247", "ilan");
		mib.put("248", "pip");
		mib.put("249", "aluELP");
		mib.put("250", "gpon");
		mib.put("251", "vdsl2");
		mib.put("252", "capwapDot11Profile");
		mib.put("253", "capwapDot11Bss");
		mib.put("254", "capwapWtpVirtualRadio");
		mib.put("255", "bits");
		mib.put("256", "docsCableUpstreamRfPort");
		mib.put("257", "cableDownstreamRfPort");
		mib.put("258", "vmwareVirtualNic");
		mib.put("259", "ieee802154");
		mib.put("260", "otnOdu");
		mib.put("261", "otnOtu");
		mib.put("262", "ifVfiType");
		mib.put("263", "g9981");
		mib.put("264", "g9982");
		mib.put("265", "g9983");
		mib.put("266", "aluEpon");
		mib.put("267", "aluEponOnu");
		mib.put("268", "aluEponPhysicalUni");
		mib.put("269", "aluEponLogicalLink");
		mib.put("270", "aluGponOnu");
		mib.put("271", "aluGponPhysicalUni");
		mib.put("272", "vmwareNicTeam");
		mib.put("277", "docsOfdmDownstream");
		mib.put("278", "docsOfdmaUpstream");
		mib.put("279", "gfast");
		mib.put("280", "sdci");
		mib.put("281", "xboxWireless");
		mib.put("282", "fastdsl");
		mib.put("283", "docsCableScte55d1FwdOob");
		mib.put("284", "docsCableScte55d1RetOob");
		mib.put("285", "docsCableScte55d2DsOob");
		mib.put("286", "docsCableScte55d2UsOob");
		mib.put("287", "docsCableNdf");
		mib.put("288", "docsCableNdr");
		mib.put("289", "ptm");
		mib.put("290", "ghn");
		mib.put("291", "otnOtsi");
		mib.put("292", "otnOtuc");
		mib.put("293", "otnOduc");
		mib.put("294", "otnOtsig");
		mib.put("295", "microwaveCarrierTermination");
		mib.put("296", "microwaveRadioLinkTerminal");
		mib.put("297", "ieee8021axDrni");
		mib.put("298", "ax25");
		mib.put("299", "ieee19061nanocom");
		mib.put("300", "cpri");
		_mib = Collections.unmodifiableMap(mib);
	}

	public static String getIanaIfType(String type) {
		return _mib.get(type) != null ? _mib.get(type) : type;
	}

}
